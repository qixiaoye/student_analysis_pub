{"ast":null,"code":"import React from'react';import{PieChart,Pie,Cell,Legend,ResponsiveContainer,Tooltip,BarChart,Bar,XAxis,YAxis,CartesianGrid}from'recharts';// 仅通过单一渠道识别的新增学生数据\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const singleChannelData=[{name:'仅自有挖掘',value:1424961,color:'#FF8042'},{name:'仅联盟',value:590703,color:'#8884d8'},{name:'仅蚂蚁',value:261497,color:'#82ca9d'},{name:'仅自有认证',value:6076,color:'#0088FE'},{name:'地址和联盟',value:234619,color:'#FFBB28'},{name:'其他组合',value:108910,color:'#999999'}];// 包含各渠道的新增学生占比\nconst channelContributionData=[{name:'包含自有挖掘',value:1747508,percent:66.55,color:'#FF8042'},{name:'包含联盟',value:876813,percent:33.39,color:'#8884d8'},{name:'包含蚂蚁',value:365251,percent:13.91,color:'#82ca9d'},{name:'包含自有认证',value:11662,percent:0.44,color:'#0088FE'}];const COLORS=['#FF8042','#8884d8','#82ca9d','#0088FE','#FFBB28','#999999'];// 添加正确的类型定义\nconst CustomTooltip=_ref=>{let{active,payload}=_ref;if(active&&payload&&payload.length){return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-3 border border-gray-200 shadow-md rounded\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold\",children:\"\".concat(payload[0].name,\": \").concat(payload[0].value.toLocaleString())}),payload[0].payload.percent&&/*#__PURE__*/_jsx(\"p\",{children:\"\\u5360\\u6BD4: \".concat(payload[0].payload.percent,\"%\")})]});}return null;};// 修复：确保函数总是返回字符串\nconst formatYAxis=value=>{if(value>=1000000){return\"\".concat((value/1000000).toFixed(1),\"M\");}else if(value>=1000){return\"\".concat((value/1000).toFixed(0),\"K\");}return value.toString();// 确保返回字符串\n};const StudentAnalysisChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-center mb-6\",children:\"\\u65B0\\u589E\\u5B66\\u751F\\u6E20\\u9053\\u5F52\\u56E0\\u5206\\u6790\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-center mb-4\",children:\"\\u5355\\u4E00\\u6E20\\u9053\\u8BC6\\u522B\\u5206\\u5E03\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-80\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:singleChannelData,cx:\"50%\",cy:\"50%\",labelLine:false,outerRadius:80,fill:\"#8884d8\",dataKey:\"value\",label:_ref2=>{let{name,percent}=_ref2;return\"\".concat(name,\": \").concat((percent*100).toFixed(1),\"%\");},children:singleChannelData.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:entry.color||COLORS[index%COLORS.length]},\"cell-\".concat(index)))}),/*#__PURE__*/_jsx(Tooltip,{content:/*#__PURE__*/_jsx(CustomTooltip,{})}),/*#__PURE__*/_jsx(Legend,{})]})})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-center mb-4\",children:\"\\u5404\\u6E20\\u9053\\u8D21\\u732E\\u5360\\u6BD4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-80\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(BarChart,{data:channelContributionData,layout:\"vertical\",margin:{top:20,right:30,left:70,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{type:\"number\",tickFormatter:formatYAxis}),/*#__PURE__*/_jsx(YAxis,{type:\"category\",dataKey:\"name\",width:100}),/*#__PURE__*/_jsx(Tooltip,{content:/*#__PURE__*/_jsx(CustomTooltip,{})}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",children:channelContributionData.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:entry.color},\"cell-\".concat(index)))})]})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-gray-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium mb-3\",children:\"\\u65B0\\u589E\\u5B66\\u751F\\u603B\\u6570: 2,625,766\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc list-inside space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u81EA\\u6709\\u6316\\u6398\\u6E20\\u9053\\u72EC\\u7ACB\\u8D21\\u732E\\u6700\\u5927\\uFF0C\\u5355\\u72EC\\u8BC6\\u522B\\u4E861,424,961\\u540D\\u5B66\\u751F\\uFF0C\\u5360\\u603B\\u65B0\\u589E\\u768454.27%\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u8054\\u76DF\\u6E20\\u9053\\u5355\\u72EC\\u8BC6\\u522B\\u4E86590,703\\u540D\\u5B66\\u751F\\uFF0C\\u5360\\u6BD422.50%\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u81EA\\u6709\\u6316\\u6398\\u548C\\u8054\\u76DF\\u6E20\\u9053\\u5171\\u540C\\u8BC6\\u522B\\u4E86234,619\\u540D\\u5B66\\u751F\\uFF0C\\u5360\\u6BD48.94%\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u603B\\u4F53\\u6765\\u770B\\uFF0C66.55%\\u7684\\u65B0\\u589E\\u5B66\\u751F\\u6765\\u81EA\\u81EA\\u6709\\u6316\\u6398\\u6E20\\u9053\\u7684\\u8D21\\u732E\"})]})]})]});};export default StudentAnalysisChart;","map":{"version":3,"names":["React","PieChart","Pie","Cell","Legend","ResponsiveContainer","Tooltip","BarChart","Bar","XAxis","YAxis","CartesianGrid","jsx","_jsx","jsxs","_jsxs","singleChannelData","name","value","color","channelContributionData","percent","COLORS","CustomTooltip","_ref","active","payload","length","className","children","concat","toLocaleString","formatYAxis","toFixed","toString","StudentAnalysisChart","width","height","data","cx","cy","labelLine","outerRadius","fill","dataKey","label","_ref2","map","entry","index","content","layout","margin","top","right","left","bottom","strokeDasharray","type","tickFormatter"],"sources":["/Users/eleme/Downloads/student_analysis/src/student-analysis/src/StudentAnalysisChart.tsx"],"sourcesContent":["import React from 'react';\nimport { PieChart, Pie, Cell, Legend, ResponsiveContainer, Tooltip, BarChart, Bar, XAxis, YAxis, CartesianGrid } from 'recharts';\n\n// 仅通过单一渠道识别的新增学生数据\nconst singleChannelData = [\n  { name: '仅自有挖掘', value: 1424961, color: '#FF8042' },\n  { name: '仅联盟', value: 590703, color: '#8884d8' },\n  { name: '仅蚂蚁', value: 261497, color: '#82ca9d' },\n  { name: '仅自有认证', value: 6076, color: '#0088FE' },\n  { name: '地址和联盟', value: 234619, color: '#FFBB28' },\n  { name: '其他组合', value: 108910, color: '#999999' }\n];\n\n// 包含各渠道的新增学生占比\nconst channelContributionData = [\n  { name: '包含自有挖掘', value: 1747508, percent: 66.55, color: '#FF8042' },\n  { name: '包含联盟', value: 876813, percent: 33.39, color: '#8884d8' },\n  { name: '包含蚂蚁', value: 365251, percent: 13.91, color: '#82ca9d' },\n  { name: '包含自有认证', value: 11662, percent: 0.44, color: '#0088FE' }\n];\n\nconst COLORS = ['#FF8042', '#8884d8', '#82ca9d', '#0088FE', '#FFBB28', '#999999'];\n\n// 添加正确的类型定义\ninterface CustomTooltipProps {\n  active?: boolean;\n  payload?: Array<any>;\n  label?: string;\n}\n\nconst CustomTooltip: React.FC<CustomTooltipProps> = ({ active, payload }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"bg-white p-3 border border-gray-200 shadow-md rounded\">\n        <p className=\"font-semibold\">{`${payload[0].name}: ${payload[0].value.toLocaleString()}`}</p>\n        {payload[0].payload.percent && (\n          <p>{`占比: ${payload[0].payload.percent}%`}</p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\n// 修复：确保函数总是返回字符串\nconst formatYAxis = (value: number): string => {\n  if (value >= 1000000) {\n    return `${(value / 1000000).toFixed(1)}M`;\n  } else if (value >= 1000) {\n    return `${(value / 1000).toFixed(0)}K`;\n  }\n  return value.toString(); // 确保返回字符串\n};\n\nconst StudentAnalysisChart: React.FC = () => {\n  return (\n    <div className=\"flex flex-col\">\n      <h2 className=\"text-xl font-bold text-center mb-6\">新增学生渠道归因分析</h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div>\n          <h3 className=\"text-lg font-medium text-center mb-4\">单一渠道识别分布</h3>\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={singleChannelData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(1)}%`}\n                >\n                  {singleChannelData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color || COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip content={<CustomTooltip />} />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n        \n        <div>\n          <h3 className=\"text-lg font-medium text-center mb-4\">各渠道贡献占比</h3>\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={channelContributionData}\n                layout=\"vertical\"\n                margin={{ top: 20, right: 30, left: 70, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis type=\"number\" tickFormatter={formatYAxis} />\n                <YAxis type=\"category\" dataKey=\"name\" width={100} />\n                <Tooltip content={<CustomTooltip />} />\n                <Bar dataKey=\"value\">\n                  {channelContributionData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Bar>\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n        <h3 className=\"text-lg font-medium mb-3\">新增学生总数: 2,625,766</h3>\n        <ul className=\"list-disc list-inside space-y-1\">\n          <li>自有挖掘渠道独立贡献最大，单独识别了1,424,961名学生，占总新增的54.27%</li>\n          <li>联盟渠道单独识别了590,703名学生，占比22.50%</li>\n          <li>自有挖掘和联盟渠道共同识别了234,619名学生，占比8.94%</li>\n          <li>总体来看，66.55%的新增学生来自自有挖掘渠道的贡献</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default StudentAnalysisChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}